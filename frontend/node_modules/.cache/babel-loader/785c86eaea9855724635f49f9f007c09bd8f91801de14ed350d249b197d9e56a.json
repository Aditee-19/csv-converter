{"ast":null,"code":"var _jsxFileName = \"D:\\\\User\\\\D_Documents\\\\WebProjects\\\\CSVConvertor\\\\frontend\\\\src\\\\components\\\\CreateMap.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport React from \"react\";\nimport Navbar from \"./Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateMap = () => {\n  _s();\n  // CSV fields\n  const [csvFile, setCsvFile] = useState('');\n  const [csvFileName, setCsvFileName] = useState('');\n\n  // JSON Fields\n  const [jsonFile, setJsonFile] = useState('');\n  const [jsonFileName, setJsonFileName] = useState('');\n  const [csvHeaders, setCsvHeaders] = useState([]);\n  const [jsonHeaders, setJsonHeaders] = useState([]);\n  const [isUploaded, setIsUploaded] = useState(false);\n  const [mappings, setMappings] = useState(new Map());\n\n  // CSV drag and drop\n  const handleDrageOverCsv = event => {\n    event.preventDefault();\n  };\n  const handleDropCsv = event => {\n    event.preventDefault();\n    setCsvFile(event.dataTransfer.files[0]);\n    setCsvFileName(event.dataTransfer.files[0].name);\n    console.log(event.dataTransfer.files[0]);\n  };\n\n  // JSON drag and drop\n  const handleDrageOverJson = event => {\n    event.preventDefault();\n  };\n  const handleDropJson = event => {\n    event.preventDefault();\n    setJsonFile(event.dataTransfer.files[0]);\n    setJsonFileName(event.dataTransfer.files[0].name);\n    console.log(event.dataTransfer.files[0]);\n  };\n  const handleNew = event => {\n    event.preventDefault();\n    setIsUploaded(false);\n    setCsvHeaders([]);\n    setJsonHeaders([]);\n    setCsvFile('');\n    setJsonFile('');\n    setCsvFileName('');\n    setJsonFileName('');\n    setMappings(new Map());\n  };\n  const handleDragOverMap = e => {\n    e.preventDefault();\n  };\n  const handleDropMap = (e, header) => {\n    e.preventDefault();\n    const droppedText = e.dataTransfer.getData(\"text\");\n    mappings.set(header, droppedText);\n    setMappings(new Map(mappings));\n    console.log(droppedText);\n    console.log(header);\n    console.log(mappings);\n  };\n  const handleOnDragStart = (e, textData) => {\n    e.dataTransfer.setData(\"text\", textData);\n  };\n  async function createMapping(e) {\n    e.preventDefault();\n    console.log(mappings);\n    const mapping = {};\n    for (let [key, value] of mappings) {\n      mapping[key] = value;\n    }\n    const mapp = JSON.stringify(mapping);\n    console.log(mapp);\n    const response = await fetch('http://localhost:1337/api/createmapping', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        mapping: mapp,\n        csv: csvHeaders,\n        jsonHeader: jsonHeaders\n      })\n    });\n  }\n  async function uplaodFile(event) {\n    event.preventDefault();\n    if (!csvFileName.endsWith(\".csv\")) {\n      alert(\"Please Upload a valid CSV file\");\n      window.location.reload();\n      return;\n    }\n    if (!jsonFileName.endsWith(\".json\")) {\n      alert(\"Please Upload a vald JSON file\");\n      window.location.reload();\n      return;\n    }\n    const csvFormData = new FormData();\n    const jsonFormData = new FormData();\n    if (csvFile && jsonFile) {\n      csvFormData.append('name', 'csv_file');\n      csvFormData.append('file', csvFile);\n      jsonFormData.append('name', 'json_file');\n      jsonFormData.append('file', jsonFile);\n      console.log(...csvFormData);\n      console.log(...jsonFormData);\n\n      // const formData = new FormData();\n      // formData.append('csv', csvFile);\n      // formData.append('json', jsonFile);\n\n      // try{\n      // const response = await fetch('http://localhost:1337/api/bothupload', {\n      //     method: 'POST',\n      //     body: formData,\n      // });\n\n      // const data = await response.json();\n\n      // console.log(data)\n\n      //     setCsvHeaders(data.csvHeaders);\n      //     setJsonHeaders(data.jsonHeaders);\n\n      // } catch(err) {\n      //     console.log(err)\n      // }\n      const csvResponse = await fetch('http://localhost:1337/api/uploadcsv', {\n        method: 'POST',\n        body: csvFormData\n      });\n      const jsonResponse = await fetch('http://localhost:1337/api/uploadjson', {\n        method: 'POST',\n        body: jsonFormData\n      });\n      const csvData = await csvResponse.json();\n      const jsonData = await jsonResponse.json();\n      console.log(csvData.csvHeaders);\n      console.log(jsonData.jsonHeaders);\n      setCsvHeaders(csvData.csvHeaders);\n      setJsonHeaders(jsonData.jsonHeaders);\n      if (csvData.status === 'ok' && jsonData.status === 'ok') {\n        alert('File Uploaded');\n        setIsUploaded(true);\n      } else {\n        alert(\"File couldn't be uploaded\");\n      }\n    } else {\n      alert('Click Upload');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CreateMap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload\",\n      children: [!isUploaded && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: uplaodFile,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bothUpload\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dragUpload\",\n              onDragOver: handleDrageOverCsv,\n              onDrop: handleDropCsv,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Drag to upload CSV file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 37\n              }, this), !csvFile && /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"file\",\n                id: \"files\",\n                onChange: e => {\n                  setCsvFile(e.target.files[0]);\n                  setCsvFileName(e.target.files[0].name);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 50\n              }, this), csvFile && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"File Name: \", csvFileName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dragUpload\",\n              onDragOver: handleDrageOverJson,\n              onDrop: handleDropJson,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Drag to upload JSON file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 37\n              }, this), !jsonFile && /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"file\",\n                id: \"files\",\n                onChange: e => {\n                  setJsonFile(e.target.files[0]);\n                  setJsonFileName(e.target.files[0].name);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 51\n              }, this), jsonFile && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"File Name: \", jsonFileName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 50\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Upload\",\n            className: \"btnU\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }, this), isUploaded && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnU\",\n          onClick: handleNew,\n          children: \"Upload New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mappingContent\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"csvContent\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"CSV Headers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 29\n            }, this), csvHeaders.map(header => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dragDiv\",\n                onDragOver: handleDragOverMap,\n                onDrop: e => {\n                  handleDropMap(e, header);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mapKey borderCommon\",\n                  children: header\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginLeft: \"20px\"\n                  },\n                  children: \"=>\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mapValue borderCommon\",\n                  children: mappings.get(header)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jsonContent\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Json Headers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 29\n            }, this), jsonHeaders.map(header => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"jsonItem1\",\n              draggable: true,\n              onDragStart: e => {\n                handleOnDragStart(e, header);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"jsonItem borderCommon\",\n                children: header\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnU\",\n          onClick: createMapping,\n          children: \"Create Mapping\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateMap, \"SpQQxAoYAox7QKQSE3ds8DlxVBU=\");\n_c = CreateMap;\nexport default CreateMap;\nvar _c;\n$RefreshReg$(_c, \"CreateMap\");","map":{"version":3,"names":["useState","React","Navbar","jsxDEV","_jsxDEV","CreateMap","_s","csvFile","setCsvFile","csvFileName","setCsvFileName","jsonFile","setJsonFile","jsonFileName","setJsonFileName","csvHeaders","setCsvHeaders","jsonHeaders","setJsonHeaders","isUploaded","setIsUploaded","mappings","setMappings","Map","handleDrageOverCsv","event","preventDefault","handleDropCsv","dataTransfer","files","name","console","log","handleDrageOverJson","handleDropJson","handleNew","handleDragOverMap","e","handleDropMap","header","droppedText","getData","set","handleOnDragStart","textData","setData","createMapping","mapping","key","value","mapp","JSON","stringify","response","fetch","method","headers","body","csv","jsonHeader","uplaodFile","endsWith","alert","window","location","reload","csvFormData","FormData","jsonFormData","append","csvResponse","jsonResponse","csvData","json","jsonData","status","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","onDragOver","onDrop","type","id","onChange","target","onClick","map","style","marginLeft","get","draggable","onDragStart","_c","$RefreshReg$"],"sources":["D:/User/D_Documents/WebProjects/CSVConvertor/frontend/src/components/CreateMap.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport React from \"react\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nconst CreateMap = () => {\r\n\r\n    // CSV fields\r\n    const [csvFile, setCsvFile] = useState('')\r\n    const [csvFileName, setCsvFileName] = useState('')\r\n\r\n    // JSON Fields\r\n    const [jsonFile, setJsonFile] = useState('')\r\n    const [jsonFileName, setJsonFileName] = useState('')\r\n\r\n    const [csvHeaders, setCsvHeaders] = useState([]);\r\n    const [jsonHeaders, setJsonHeaders] = useState([]);\r\n\r\n    const [isUploaded, setIsUploaded] = useState(false);\r\n\r\n    const [mappings, setMappings] = useState(new Map());\r\n\r\n    // CSV drag and drop\r\n    const handleDrageOverCsv = (event) => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    const handleDropCsv = (event) => {\r\n        event.preventDefault();\r\n        setCsvFile(event.dataTransfer.files[0])\r\n        setCsvFileName(event.dataTransfer.files[0].name)\r\n        console.log(event.dataTransfer.files[0])\r\n    }\r\n\r\n    // JSON drag and drop\r\n    const handleDrageOverJson = (event) => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    const handleDropJson = (event) => {\r\n        event.preventDefault();\r\n        setJsonFile(event.dataTransfer.files[0])\r\n        setJsonFileName(event.dataTransfer.files[0].name)\r\n        console.log(event.dataTransfer.files[0])\r\n    }\r\n\r\n    const handleNew = (event) => {\r\n        event.preventDefault();\r\n        setIsUploaded(false);\r\n        setCsvHeaders([]);\r\n        setJsonHeaders([]);\r\n        setCsvFile('');\r\n        setJsonFile('');\r\n        setCsvFileName('');\r\n        setJsonFileName('');\r\n        setMappings(new Map())\r\n    }\r\n\r\n    const handleDragOverMap = (e) => {\r\n        e.preventDefault()\r\n    }\r\n\r\n    const handleDropMap = (e, header) => {\r\n        e.preventDefault()\r\n        const droppedText = e.dataTransfer.getData(\"text\");\r\n\r\n        mappings.set(header, droppedText);\r\n        setMappings(new Map(mappings))\r\n\r\n        console.log(droppedText);\r\n        console.log(header);\r\n        console.log(mappings);\r\n\r\n    }\r\n\r\n    const handleOnDragStart = (e, textData) => {\r\n        e.dataTransfer.setData(\"text\", textData)\r\n    }\r\n\r\n    async function createMapping(e) {\r\n        e.preventDefault()\r\n        console.log(mappings)\r\n\r\n        const mapping = {}\r\n        for (let [key, value] of mappings) {\r\n            mapping[key] = value;\r\n        }\r\n\r\n        const mapp = JSON.stringify(mapping);\r\n        console.log(mapp)\r\n\r\n\r\n        const response = await fetch('http://localhost:1337/api/createmapping', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                mapping: mapp,\r\n                csv: csvHeaders,\r\n                jsonHeader: jsonHeaders\r\n            }),\r\n        })\r\n    }\r\n\r\n    async function uplaodFile(event) {\r\n        event.preventDefault()\r\n\r\n        if (!csvFileName.endsWith(\".csv\")) {\r\n            alert(\"Please Upload a valid CSV file\")\r\n            window.location.reload()\r\n            return\r\n        }\r\n\r\n        if (!jsonFileName.endsWith(\".json\")) {\r\n            alert(\"Please Upload a vald JSON file\")\r\n            window.location.reload()\r\n            return\r\n        }\r\n\r\n        const csvFormData = new FormData();\r\n        const jsonFormData = new FormData();\r\n        if (csvFile && jsonFile) {\r\n            csvFormData.append('name', 'csv_file');\r\n            csvFormData.append('file', csvFile);\r\n\r\n            jsonFormData.append('name', 'json_file');\r\n            jsonFormData.append('file', jsonFile);\r\n\r\n\r\n            console.log(...csvFormData)\r\n            console.log(...jsonFormData)\r\n\r\n            // const formData = new FormData();\r\n            // formData.append('csv', csvFile);\r\n            // formData.append('json', jsonFile);\r\n\r\n            // try{\r\n            // const response = await fetch('http://localhost:1337/api/bothupload', {\r\n            //     method: 'POST',\r\n            //     body: formData,\r\n            // });\r\n\r\n            // const data = await response.json();\r\n\r\n            // console.log(data)\r\n\r\n\r\n            //     setCsvHeaders(data.csvHeaders);\r\n            //     setJsonHeaders(data.jsonHeaders);\r\n\r\n            // } catch(err) {\r\n            //     console.log(err)\r\n            // }\r\n            const csvResponse = await fetch('http://localhost:1337/api/uploadcsv', {\r\n                method: 'POST',\r\n                body: csvFormData\r\n            })\r\n\r\n            const jsonResponse = await fetch('http://localhost:1337/api/uploadjson', {\r\n                method: 'POST',\r\n                body: jsonFormData\r\n            })\r\n\r\n            const csvData = await csvResponse.json()\r\n            const jsonData = await jsonResponse.json()\r\n\r\n            console.log(csvData.csvHeaders)\r\n            console.log(jsonData.jsonHeaders)\r\n\r\n            setCsvHeaders(csvData.csvHeaders);\r\n            setJsonHeaders(jsonData.jsonHeaders);\r\n\r\n\r\n\r\n            if (csvData.status === 'ok' && jsonData.status === 'ok') {\r\n                alert('File Uploaded')\r\n                setIsUploaded(true)\r\n            } else {\r\n                alert(\"File couldn't be uploaded\")\r\n            }\r\n        }\r\n\r\n        else {\r\n            alert('Click Upload')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <h1>CreateMap</h1>\r\n            <div className=\"upload\">\r\n                {!isUploaded &&\r\n                    <div>\r\n                        <form onSubmit={uplaodFile}>\r\n                            <div className=\"bothUpload\">\r\n                                <div\r\n                                    className=\"dragUpload\"\r\n                                    onDragOver={handleDrageOverCsv}\r\n                                    onDrop={handleDropCsv}\r\n                                >\r\n                                    <p>Drag to upload CSV file</p>\r\n                                    {!csvFile && <input type=\"file\" name=\"file\" id=\"files\" onChange={(e) => { setCsvFile(e.target.files[0]); setCsvFileName(e.target.files[0].name) }} />}\r\n                                    {csvFile && <p>File Name: {csvFileName}</p>}\r\n                                    <br />\r\n                                </div>\r\n                                <div\r\n                                    className=\"dragUpload\"\r\n                                    onDragOver={handleDrageOverJson}\r\n                                    onDrop={handleDropJson}\r\n                                >\r\n                                    <p>Drag to upload JSON file</p>\r\n                                    {!jsonFile && <input type=\"file\" name=\"file\" id=\"files\" onChange={(e) => { setJsonFile(e.target.files[0]); setJsonFileName(e.target.files[0].name) }} />}\r\n                                    {jsonFile && <p>File Name: {jsonFileName}</p>}\r\n                                    <br />\r\n                                </div>\r\n                            </div>\r\n                            <input type=\"submit\" value=\"Upload\" className=\"btnU\" />\r\n                        </form>\r\n                    </div>\r\n                }\r\n                {isUploaded && <div>\r\n                    <button className=\"btnU\" onClick={handleNew}>Upload New</button>\r\n\r\n                    <div className=\"mappingContent\">\r\n                        {<div className=\"csvContent\">\r\n                            <h1>CSV Headers</h1>\r\n                            {\r\n                                csvHeaders.map((header) => (\r\n                                    <div>\r\n                                        <div\r\n                                            className=\"dragDiv\"\r\n                                            onDragOver={handleDragOverMap}\r\n                                            onDrop={(e) => { handleDropMap(e, header) }}\r\n                                        >\r\n                                            <div className=\"mapKey borderCommon\">{header}</div>\r\n                                            <div style={{ marginLeft: \"20px\" }}>=&gt;</div>\r\n                                            <div className=\"mapValue borderCommon\">{mappings.get(header)}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>}\r\n\r\n                        {<div className=\"jsonContent\">\r\n                            <h1>Json Headers</h1>\r\n                            {\r\n                                jsonHeaders.map((header) => (\r\n                                    <div\r\n                                        className=\"jsonItem1\"\r\n                                        draggable\r\n                                        onDragStart={(e) => { handleOnDragStart(e, header) }}\r\n                                    >\r\n                                        <div className=\"jsonItem borderCommon\">{header}</div>\r\n                                        <br />\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>}\r\n                        {/* <table>\r\n                            <tr>\r\n                                <th>CSV Content</th>\r\n                                <th>Mapped To</th>\r\n                                <th>JSON Content</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                {\r\n                                csvHeaders.map((header) => (\r\n                                    <div>\r\n                                        <div\r\n                                            className=\"dragDiv\"\r\n                                            onDragOver={handleDragOverMap}\r\n                                            onDrop={(e) => { handleDropMap(e, header) }}\r\n                                        >\r\n                                            <div className=\"mapKey borderCommon\">{header}</div>\r\n                                            <div style={{ marginLeft: \"20px\" }}>=&gt;</div>\r\n                                            <div className=\"mapValue borderCommon\">{mappings.get(header)}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                                </td>\r\n                                <td>\r\n                                    \r\n                                </td>\r\n                                <td>\r\n                                {\r\n                                jsonHeaders.map((header) => (\r\n                                    <div\r\n                                        className=\"jsonItem1\"\r\n                                        draggable\r\n                                        onDragStart={(e) => { handleOnDragStart(e, header) }}\r\n                                    >\r\n                                        <div className=\"jsonItem borderCommon\">{header}</div>\r\n                                        <br />\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                                </td>\r\n                            </tr>\r\n                        </table> */}\r\n                    </div>\r\n                    <button className=\"btnU\" onClick={createMapping}>Create Mapping</button>\r\n                </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateMap;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}