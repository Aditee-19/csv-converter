{"ast":null,"code":"var _jsxFileName = \"D:\\\\User\\\\D_Documents\\\\WebProjects\\\\CSVConvertor\\\\frontend\\\\src\\\\components\\\\CreateMap.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport React from \"react\";\nimport Navbar from \"./Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateMap = () => {\n  _s();\n  const [csvFile, setCsvFile] = useState('');\n  const [csvFileName, setCsvFileName] = useState('');\n\n  // const formData = new FormData();\n\n  const handleDrageOverCsv = event => {\n    event.preventDefault();\n  };\n  const handleDropCsv = event => {\n    event.preventDefault();\n    setCsvFile(event.dataTransfer.files[0]);\n    setCsvFileName(event.dataTransfer.files[0].name);\n    console.log(event.dataTransfer.files[0]);\n  };\n  async function uplaodFile(event) {\n    event.preventDefault();\n    const files = document.getElementById(\"files\");\n\n    // setCsvFile(files.files[0])\n    // setFileName(files.files[0].name)\n\n    // console.log(document.querySelector(\"#files\"))\n    // setCsvFile(event.target.files);\n    // setCsvFile(document.querySelector(\"#files\"));\n    // console.log(csvFile)\n\n    if (!csvFileName.endsWith(\".csv\")) {\n      alert(\"Please Upload a CSV file\");\n      window.location.reload();\n      return;\n    }\n    const formData = new FormData();\n    if (csvFile) {\n      formData.append('name', 'csv_File');\n      // formData.append('file', files.files[0]);\n      formData.append('file', csvFile);\n      console.log(...formData);\n      const response = await fetch('http://localhost:1337/api/uploadcsv', {\n        method: 'POST',\n        // headers: {\n        //     'Content-Type': 'text/csv'\n        // },\n        body: formData\n      });\n\n      // .then(res => console.log(res.json()))\n      // .catch(err => console.log(err));\n\n      const data = await response.json();\n      console.log(data);\n      if (data.status === 'ok') {\n        alert('File Uploaded');\n      } else {\n        alert(\"File couldn't be uploaded\");\n      }\n    } else {\n      alert('Click Upload');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CreateMap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: uplaodFile,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bothUpload\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dragUpload\",\n              onDragOver: handleDrageOverCsv,\n              onDrop: handleDropCsv,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Drag to upload CSV file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this), !csvFile && /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"file\",\n                id: \"files\",\n                onChange: e => {\n                  setCsvFile(e.target.files[0]);\n                  setFileName(e.target.files[0].name);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 46\n              }, this), csvFile && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: fileName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dragUpload\",\n              onDragOver: handleDrageOver,\n              onDrop: handleDrop,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Drag to upload CSV file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 33\n              }, this), !csvFile && /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"file\",\n                id: \"files\",\n                onChange: e => {\n                  setCsvFile(e.target.files[0]);\n                  setFileName(e.target.files[0].name);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 46\n              }, this), csvFile && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: fileName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Upload\",\n            className: \"btnU\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateMap, \"TPXmBZZpJA6NVndfRr4RcfO93aQ=\");\n_c = CreateMap;\nexport default CreateMap;\nvar _c;\n$RefreshReg$(_c, \"CreateMap\");","map":{"version":3,"names":["useState","React","Navbar","jsxDEV","_jsxDEV","CreateMap","_s","csvFile","setCsvFile","csvFileName","setCsvFileName","handleDrageOverCsv","event","preventDefault","handleDropCsv","dataTransfer","files","name","console","log","uplaodFile","document","getElementById","endsWith","alert","window","location","reload","formData","FormData","append","response","fetch","method","body","data","json","status","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","onDragOver","onDrop","type","id","onChange","e","target","setFileName","handleDrageOver","handleDrop","value","_c","$RefreshReg$"],"sources":["D:/User/D_Documents/WebProjects/CSVConvertor/frontend/src/components/CreateMap.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport React from \"react\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nconst CreateMap = () => {\r\n\r\n    const [csvFile, setCsvFile] = useState('')\r\n    const [csvFileName, setCsvFileName] = useState('')\r\n\r\n    // const formData = new FormData();\r\n\r\n    const handleDrageOverCsv = (event) => {\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    const handleDropCsv = (event) => {\r\n        event.preventDefault();\r\n        setCsvFile(event.dataTransfer.files[0])\r\n        setCsvFileName(event.dataTransfer.files[0].name)\r\n        console.log(event.dataTransfer.files[0])\r\n\r\n    }\r\n\r\n\r\n    async function uplaodFile(event) {\r\n        event.preventDefault()\r\n\r\n        const files = document.getElementById(\"files\");\r\n\r\n        // setCsvFile(files.files[0])\r\n        // setFileName(files.files[0].name)\r\n\r\n        // console.log(document.querySelector(\"#files\"))\r\n        // setCsvFile(event.target.files);\r\n        // setCsvFile(document.querySelector(\"#files\"));\r\n        // console.log(csvFile)\r\n\r\n        if(!csvFileName.endsWith(\".csv\")){\r\n            alert(\"Please Upload a CSV file\")\r\n            window.location.reload()\r\n            return\r\n        }\r\n\r\n        const formData = new FormData();\r\n        if (csvFile) {\r\n            formData.append('name', 'csv_File');\r\n            // formData.append('file', files.files[0]);\r\n            formData.append('file', csvFile);\r\n\r\n\r\n            console.log(...formData)\r\n\r\n            const response = await fetch('http://localhost:1337/api/uploadcsv', {\r\n                method: 'POST',\r\n                // headers: {\r\n                //     'Content-Type': 'text/csv'\r\n                // },\r\n                body: formData\r\n            })\r\n\r\n            // .then(res => console.log(res.json()))\r\n            // .catch(err => console.log(err));\r\n\r\n            const data = await response.json()\r\n\r\n            console.log(data)\r\n\r\n            if (data.status === 'ok') {\r\n                alert('File Uploaded')\r\n            } else {\r\n                alert(\"File couldn't be uploaded\")\r\n            }\r\n        }\r\n\r\n        else {\r\n            alert('Click Upload')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <h1>CreateMap</h1>\r\n            <div className=\"upload\">\r\n                <form onSubmit={uplaodFile}>\r\n                    <div>\r\n                        <div className=\"bothUpload\">\r\n                            <div\r\n                                className=\"dragUpload\"\r\n                                onDragOver={handleDrageOverCsv}\r\n                                onDrop={handleDropCsv}\r\n                            >\r\n                                <p>Drag to upload CSV file</p>\r\n                                {!csvFile && <input type=\"file\" name=\"file\" id=\"files\" onChange={(e) => { setCsvFile(e.target.files[0]); setFileName(e.target.files[0].name) }} />}\r\n                                {csvFile && <p>{fileName}</p>}\r\n                                <br />\r\n                            </div>\r\n                            <div\r\n                                className=\"dragUpload\"\r\n                                onDragOver={handleDrageOver}\r\n                                onDrop={handleDrop}\r\n                            >\r\n                                <p>Drag to upload CSV file</p>\r\n                                {!csvFile && <input type=\"file\" name=\"file\" id=\"files\" onChange={(e) => { setCsvFile(e.target.files[0]); setFileName(e.target.files[0].name) }} />}\r\n                                {csvFile && <p>{fileName}</p>}\r\n                                <br />\r\n                            </div>\r\n                        </div>\r\n                        <input type=\"submit\" value=\"Upload\" className=\"btnU\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateMap;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}