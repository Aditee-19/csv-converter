{"ast":null,"code":"var _jsxFileName = \"D:\\\\User\\\\D_Documents\\\\WebProjects\\\\CSVConvertor\\\\frontend\\\\src\\\\components\\\\UseMap.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport Navbar from \"./Navbar\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UseMap = () => {\n  _s();\n  const [csvFile, setCsvFile] = useState('');\n  const [csvFileName, setCsvFileName] = useState('');\n  const [fileUploaded, setFileUploaded] = useState(false);\n  const navigate = useNavigate();\n\n  // const formData = new FormData();\n\n  const handleDrageOverCsv = event => {\n    event.preventDefault();\n  };\n  const handleDropCsv = event => {\n    event.preventDefault();\n    setCsvFile(event.dataTransfer.files[0]);\n    setCsvFileName(event.dataTransfer.files[0].name);\n    console.log(event.dataTransfer.files[0]);\n  };\n  async function uplaodFile(event) {\n    event.preventDefault();\n\n    // const files = document.getElementById(\"files\");\n\n    // setCsvFile(files.files[0])\n    // setFileName(files.files[0].name)\n\n    // console.log(document.querySelector(\"#files\"))\n    // setCsvFile(event.target.files);\n    // setCsvFile(document.querySelector(\"#files\"));\n    // console.log(csvFile)\n\n    if (!csvFileName.endsWith(\".csv\")) {\n      alert(\"Please Upload a valid CSV file\");\n      window.location.reload();\n      return;\n    }\n    const csvFormData = new FormData();\n    if (csvFile) {\n      csvFormData.append('name', 'csv_file');\n      // formData.append('file', files.files[0]);\n      csvFormData.append('file', csvFile);\n      console.log(...csvFormData);\n      const csvResponse = await fetch('http://localhost:1337/api/uploadcsv', {\n        method: 'POST',\n        // headers: {\n        //     'Content-Type': 'text/csv'\n        // },\n        body: csvFormData\n      });\n\n      // .then(res => console.log(res.json()))\n      // .catch(err => console.log(err));\n\n      const csvData = await csvResponse.json();\n      console.log(csvData);\n      if (csvData.status === 'ok') {\n        alert('File Uploaded');\n        setFileUploaded(true);\n      } else {\n        alert(\"File couldn't be uploaded\");\n      }\n    } else {\n      alert('Click Upload');\n    }\n  }\n  async function handleDownload(e) {\n    e.preventDefault();\n    const res = await fetch('http://localhost:1337/api/downloadjson').then(res => {\n      res.blob().then(blob => {\n        let url = window.URL.createObjectURL(blob);\n        let a = document.createElement('a');\n        a.href = url;\n        a.download = 'output.json';\n        a.click();\n      });\n    });\n    setFileUploaded(false);\n    setCsvFile('');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"UseMap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), !fileUploaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: uplaodFile,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dragUpload\",\n          onDragOver: handleDrageOverCsv,\n          onDrop: handleDropCsv,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Drag to upload CSV file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"file\",\n            id: \"files\",\n            onChange: e => {\n              setCsvFile(e.target.files[0]);\n              setCsvFileName(e.target.files[0].name);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 26\n          }, this), csvFile && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Name: \", csvFileName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Upload\",\n          className: \"btnU\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 31\n    }, this), fileUploaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleDownload,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n_s(UseMap, \"PkoV9Uco5k6nzZOeFRn4mn2Rkys=\", false, function () {\n  return [useNavigate];\n});\n_c = UseMap;\nexport default UseMap;\nvar _c;\n$RefreshReg$(_c, \"UseMap\");","map":{"version":3,"names":["React","useState","Navbar","useNavigate","jsxDEV","_jsxDEV","UseMap","_s","csvFile","setCsvFile","csvFileName","setCsvFileName","fileUploaded","setFileUploaded","navigate","handleDrageOverCsv","event","preventDefault","handleDropCsv","dataTransfer","files","name","console","log","uplaodFile","endsWith","alert","window","location","reload","csvFormData","FormData","append","csvResponse","fetch","method","body","csvData","json","status","handleDownload","e","res","then","blob","url","URL","createObjectURL","a","document","createElement","href","download","click","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","onDragOver","onDrop","type","id","onChange","target","value","_c","$RefreshReg$"],"sources":["D:/User/D_Documents/WebProjects/CSVConvertor/frontend/src/components/UseMap.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst UseMap = () => {\r\n\r\n    const [csvFile, setCsvFile] = useState('')\r\n    const [csvFileName, setCsvFileName] = useState('')\r\n    const [fileUploaded, setFileUploaded] = useState(false)\r\n\r\n    const navigate = useNavigate();\r\n\r\n    // const formData = new FormData();\r\n\r\n    const handleDrageOverCsv = (event) => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    const handleDropCsv = (event) => {\r\n        event.preventDefault();\r\n        setCsvFile(event.dataTransfer.files[0])\r\n        setCsvFileName(event.dataTransfer.files[0].name)\r\n        console.log(event.dataTransfer.files[0])\r\n    }\r\n\r\n\r\n    async function uplaodFile(event) {\r\n        event.preventDefault()\r\n\r\n        // const files = document.getElementById(\"files\");\r\n\r\n        // setCsvFile(files.files[0])\r\n        // setFileName(files.files[0].name)\r\n\r\n        // console.log(document.querySelector(\"#files\"))\r\n        // setCsvFile(event.target.files);\r\n        // setCsvFile(document.querySelector(\"#files\"));\r\n        // console.log(csvFile)\r\n\r\n        if (!csvFileName.endsWith(\".csv\")) {\r\n            alert(\"Please Upload a valid CSV file\")\r\n            window.location.reload()\r\n            return\r\n        }\r\n\r\n        const csvFormData = new FormData();\r\n        if (csvFile) {\r\n            csvFormData.append('name', 'csv_file');\r\n            // formData.append('file', files.files[0]);\r\n            csvFormData.append('file', csvFile);\r\n\r\n\r\n            console.log(...csvFormData)\r\n\r\n            const csvResponse = await fetch('http://localhost:1337/api/uploadcsv', {\r\n                method: 'POST',\r\n                // headers: {\r\n                //     'Content-Type': 'text/csv'\r\n                // },\r\n                body: csvFormData\r\n            })\r\n\r\n            // .then(res => console.log(res.json()))\r\n            // .catch(err => console.log(err));\r\n\r\n            const csvData = await csvResponse.json()\r\n\r\n            console.log(csvData)\r\n\r\n            if (csvData.status === 'ok') {\r\n                alert('File Uploaded')\r\n                setFileUploaded(true)\r\n            } else {\r\n                alert(\"File couldn't be uploaded\")\r\n            }\r\n        }\r\n\r\n        else {\r\n            alert('Click Upload')\r\n        }\r\n\r\n    }\r\n\r\n    async function handleDownload(e) {\r\n        e.preventDefault()\r\n        const res = await fetch('http://localhost:1337/api/downloadjson')\r\n        .then(res => {\r\n            res.blob().then(blob => {\r\n               let url = window.URL.createObjectURL(blob);\r\n               let a = document.createElement('a');\r\n               a.href = url;\r\n               a.download = 'output.json';\r\n               a.click();\r\n            });\r\n         });\r\n\r\n         setFileUploaded(false)\r\n         setCsvFile('')\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <h1>UseMap</h1>\r\n            {!fileUploaded && <div className=\"upload\">\r\n                <form onSubmit={uplaodFile}>\r\n                    <div\r\n                        className=\"dragUpload\"\r\n                        onDragOver={handleDrageOverCsv}\r\n                        onDrop={handleDropCsv}\r\n                    >\r\n                        <p>Drag to upload CSV file</p>\r\n                        {<input type=\"file\" name=\"file\" id=\"files\" onChange={(e) => { setCsvFile(e.target.files[0]); setCsvFileName(e.target.files[0].name) }} />}\r\n                        {csvFile && <p>File Name: {csvFileName}</p>}\r\n                        <br />\r\n                    </div>\r\n                    <input type=\"submit\" value=\"Upload\" className=\"btnU\" />\r\n                </form>\r\n            </div>}\r\n            {fileUploaded && <div>\r\n                <form onSubmit={handleDownload}>\r\n                    <button type=\"submit\">Download</button>\r\n                </form>\r\n            </div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UseMap;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}